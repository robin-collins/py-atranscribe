[project]
name = "py-atranscribe"
version = "0.1.0"
description = "Automated audio folder transcription and speaker diarization for Docker. Monitors a directory for new audio files, transcribes with faster-whisper, applies pyannote diarization, and outputs timestamped, speaker-labeled transcripts in multiple formats. Robust, container-ready, and fully configurable."
readme = "README.md"
requires-python = ">=3.11.11"
authors = [
    {name = "Robin Collins", email = "robin.f.collins@outlook.com"},
]
keywords = ["transcription", "diarization", "audio", "whisper", "pyannote", "docker", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
license = {text = "MIT"}
dependencies = [
    "torch>=2.0.0",
    "torchaudio>=2.0.0",
    "torchvision>=0.22.1",
    # Enhanced transcription with flash attention
    "accelerate>=0.20.0",
    "flash-attn>=2.0.0",
    # Core transcription and diarization
    "faster-whisper==1.1.1",
    "pyannote.audio==3.3.2",
    "transformers==4.47.1",
    # Audio processing and format support
    "ffmpeg-python>=0.2.0",
    "librosa>=0.10.0",
    "soundfile>=0.12.0",
    "pydub>=0.25.0",
    "ffmpeg-normalize==1.32.5",
    "noisereduce==3.0.3",
    # File monitoring and system utilities
    "watchdog>=3.0.0",
    # Configuration and data handling
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "numpy==1.26.4",
    "scipy==1.14.1",
    # Web server for health checks
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.23.0",
    # Subtitle format support
    "webvtt-py>=0.4.6",
    "srt>=3.5.3",
    # Preprocessing utilities
    "silero-vad>=4.0.0",
    # HTTP client for model downloads
    "httpx>=0.24.0",
    # Logging and monitoring
    "structlog>=23.1.0",
    "prometheus-client>=0.17.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "ruff>=0.12.1",
]

[project.scripts]
py-atranscribe = "auto_diarize_transcribe:main"

[project.urls]
Homepage = "https://github.com/robinsmj2015/py-atranscribe"
Repository = "https://github.com/robinsmj2015/py-atranscribe"
Issues = "https://github.com/robinsmj2015/py-atranscribe/issues"
Changelog = "https://github.com/robinsmj2015/py-atranscribe/blob/main/CHANGELOG.md"

[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "E501",     # Line too long
    "F401",     # Unused import
    "T201",     # Print statement
    "D203",     # One blank line required before class docstring
    "D213",     # Multi-line docstring summary should start at the second line
    "COM812",   # Missing trailing comma
    # User-requested exclusions
    "SLF001",   # Private member accessed
    "ARG002",   # Unused method argument
    "ANN401",   # Dynamically typed expressions (typing.Any) are disallowed
    "PLC0415",  # Import should be placed at the top of the module
    "RET505",   # Unnecessary `else` after `return` statement
    "TRY401",   # Redundant exception types in `except` clause
    "D204",     # One blank line required after class docstring
    "PLR0913",  # Too many arguments in function definition
    "FBT001",   # Boolean positional arg in function definition
    "FBT002",   # Boolean default positional argument in function definition
    "I001",     # Import block is un-sorted or un-formatted
    "N806",     # Variable in function should be lowercase
    "PIE790",   # Unnecessary `pass` statement
    "PLR0911",  # Too many return statements
    "RUF100",   # Unused `noqa` directive
    "D205",     # One blank line required between summary line and description
    "D401",     # First line should be in imperative mood
    "N803",     # Argument name should be lowercase
    "N818",     # Exception name should be named with an Error suffix
    "PERF401",  # Use a list comprehension to create a transformed list
    "SIM103",   # Return the condition directly
    "D200",     # One-line docstring should fit on one line
    "EM101",    # Exception must not use a string literal, assign to variable first
    "TRY003",   # Avoid specifying long messages outside the exception class
    "UP024",    # Replace aliased errors with `OSError`
]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["T201", "S101"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true

[tool.uv.sources]
torch = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
]
torchvision = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
]
